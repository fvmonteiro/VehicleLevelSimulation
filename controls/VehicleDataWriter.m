classdef VehicleDataWriter < handle
    %VehicleDataWriter Writes data generated by simulations
    
    properties
        resultsBaseFolder = 'numerical_results/';
        resultsFolder
        simulationName
    end
    
    methods
        function obj = VehicleDataWriter(simName, scenario)
            obj.resultsFolder = sprintf('%s/%s/', ...
                simName, scenario);
        end
        
        function [] = setSimulationName(obj, hasTruck, relVel, lcStrategy)
            if hasTruck
                truckString = '_truckLC';
            else
                truckString = '';
            end
            if strcmp(obj.resultsFolder, 'platoon')
                strategyString = ['_strategy_' lcStrategy];
            else
                strategyString = '';
            end
            obj.simulationName= sprintf('%srel_vel_%d%s', ...
                truckString, relVel, strategyString);
        end
        
        function [] = writeVehiclesPerLane(origLane, destLane, verbose)
            %writeVehicleArraysToFile Write destination and origin lane
            %vehicle arrays to mat file
            if contains(obj.simulationName, 'single_veh')
                % To match paper descriptions
                origLane.getVehByName('p1').name ='E';
            end
            
            save([obj.resultsFolder, obj.simulationName], ...
                'destLane', 'origLane');
            if nargin > 2 && verbose
                fprintf('Results saved at %s/%s', ...
                    obj.resultsFolder, obj.simulationName)
            end
        end
        
        function [] = writeVehicleArray(allVehicles, verbose)
            save([obj.resultsFolder, obj.simulationName], ...
                'allVehicles');
            if nargin > 2 && verbose
                fprintf('Results saved at %s/%s', ...
                    obj.resultsFolder, obj.simulationName)
            end
        end
    end
end

